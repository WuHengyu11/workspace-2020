<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wolfcode.mapper.CourseOrderMapper" >
  <resultMap id="BaseResultMap" type="cn.wolfcode.domain.CourseOrder" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="input_time" property="inputTime" jdbcType="TIMESTAMP" />
<!--    <result column="customer_id" property="customerId" jdbcType="BIGINT" />-->
<!--    <result column="course_id" property="courseId" jdbcType="BIGINT" />-->
    <result column="money" property="money" jdbcType="DECIMAL" />
    <association property="course"  javaType="cn.wolfcode.domain.SystemDictionaryItem" columnPrefix="course_">
      <id column="id" property="id"/>
      <result column="title" property="title"/>
    </association>
    <association property="customer"  javaType="cn.wolfcode.domain.Customer" columnPrefix="customer_">
      <id column="id" property="id"/>
      <result column="name" property="name"/>
    </association>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from courseorder
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.wolfcode.domain.CourseOrder" useGeneratedKeys="true" keyProperty="id" >
    insert into courseorder (input_time, customer_id, course_id, 
      money)
    values (#{inputTime}, #{customer.id,jdbcType=BIGINT}, #{course.id,jdbcType=BIGINT},
      #{money,jdbcType=DECIMAL})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.wolfcode.domain.CourseOrder" >
    update courseorder
    set input_time = #{inputTime},
      customer_id = #{customer.id,jdbcType=BIGINT},
      course_id = #{course.id,jdbcType=BIGINT},
      money = #{money,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, input_time, customer_id, course_id, money
    from courseorder
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, input_time, customer_id, course_id, money
    from courseorder
  </select>
  <select id="queryForList" resultMap="BaseResultMap">
     SELECT
	c.id,
	c.input_time,
	cm.id customer_id,
	cm.name customer_name,
    course.id course_id,
	course.title course_title,
	c.money
FROM
	courseorder c
LEFT JOIN systemdictionaryitem course on c.course_id = course.id
LEFT JOIN customer cm on c.customer_id = cm.id
    <where>
      <if test="keyword != null">
        and cm.name like concat('%',#{keyword},'%')
      </if>
    </where>
  </select>
</mapper>